generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("LOCAL_DATABASE_URL")
}

model PanelUser {
  id         String        @id
  clerk_id   String        @unique
  email      String        @unique
  fullname   String
  role       PanelUserType
  created_at DateTime      @default(now())

  category    Category[]
  subcategory Subcategory[]
  product     Product[]
  discount    Discount[]
}

model Notification {
  id          String   @id
  title       String
  description String
  author      String?
  is_read     Boolean  @default(false)
  created_at  DateTime @default(now())
}

model Customer {
  id               String       @id
  email            String       @unique
  phone            String       @unique
  name             String
  profile_picture  String?
  role             CustomerType
  is_approved      Boolean      @default(false)
  gstin            String?
  business         String?
  shipping_address Json?
  billing_address  Json?
  created_at       DateTime     @default(now())

  dealer_id   String?
  dealer_user Customer?  @relation("DealerUser", fields: [dealer_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  dealer      Customer[] @relation("DealerUser")

  discount Discount?

  return Return[]
}

model Category {
  id          String   @id
  title       String   @unique
  description String?
  image       String
  created_at  DateTime @default(now())

  panel_user_id String?
  panel_user    PanelUser? @relation(fields: [panel_user_id], references: [id])

  subcategory Subcategory[]
  product     Product[]
}

model Subcategory {
  id          String   @id
  title       String   @unique
  description String?
  image       String
  created_at  DateTime @default(now())

  category_id String?
  category    Category? @relation(fields: [category_id], references: [id])

  panel_user_id String?
  panel_user    PanelUser? @relation(fields: [panel_user_id], references: [id])

  product Product[]
}

model Product {
  id          String            @id
  title       String            @unique
  price       Float
  sku         String?
  visibility  ProductVisibility @default(HIDDEN)
  type        ProductType
  label       ProductLabel
  warranty    Int
  quantity    Int
  usps        String?
  keywords    String[]
  description Json
  images      String[]
  created_at  DateTime          @default(now())

  panel_user_id String?
  panelUser     PanelUser? @relation(fields: [panel_user_id], references: [id])

  category_id String?
  category    Category? @relation(fields: [category_id], references: [id])

  subcategory_id String?
  subcategory    Subcategory? @relation(fields: [subcategory_id], references: [id])

  discount Discount?
}

model OTP {
  id         String   @id @default(nanoid())
  email      String   @unique
  code       String
  expires_at DateTime
  created_at DateTime @default(now())
}

model Discount {
  id          String       @id // Also coupon-code
  type        DiscountType
  amount      Float
  expiry_date DateTime
  created_at  DateTime

  admin_id String?   @unique
  admin    Customer? @relation(fields: [admin_id], references: [id])

  product_id String?  @unique
  product    Product? @relation(fields: [product_id], references: [id])

  panel_user_id String?
  panelUser     PanelUser? @relation(fields: [panel_user_id], references: [id])
}

model Return {
  id           String    @id
  product_name String?
  model_number String    @unique
  issue        String
  images       String[]
  status       RMAStatus @default(REVIEW)
  created_at   DateTime  @default(now())

  customer_id String?
  customer    Customer? @relation(fields: [customer_id], references: [id])
}

model Course {
  id String @id
}

enum RMAStatus {
  REVIEW
  APPROVE
  REJECT
}

enum DiscountType {
  PERCENTAGE
  AMOUNT
}

enum CustomerType {
  DEALER
  TECHNICIAN
  BACKOFFICE
}

enum PanelUserType {
  ADMIN
  EMPLOYEE
}

enum ProductVisibility {
  PUBLIC
  HIDDEN
}

enum ProductType {
  NORMAL
  FIBRE
  BUNDLE
}

enum ProductLabel {
  NEW
  TRENDING
  HOT
  SELLING
}
